version: 2.1

orbs:
  codecov: codecov/codecov@3.2.5

parameters:
  repo-root-changed:
    type: boolean
    default: false
  engine-changed:
    type: boolean
    default: false
  webrtc-changed:
    type: boolean
    default: false
  hls-changed:
    type: boolean
    default: false
  rtsp-changed:
    type: boolean
    default: false
  file-changed:
    type: boolean
    default: false
  sip-changed:
    type: boolean
    default: false
  recording-changed:
    type: boolean
    default: false
  integration-changed:
    type: boolean
    default: false
  webrtc-to-hls-changed:
    type: boolean
    default: false
  webrtc-videoroom-changed:
    type: boolean
    default: false

executors:
 machine_executor_amd64:
   machine:
     image: ubuntu-2204:2024.01.1
   environment:
     architecture: "amd64"
     platform: "linux/amd64"


jobs:
  test_integration:
    parameters:
      workdir:
        type: string
      codecov_flag:
        type: string

    executor: machine_executor_amd64
    working_directory: << parameters.workdir >>
    steps:
      - checkout
      - run: sudo apt-get install -y net-tools
      - run: ifconfig
      - run: ifconfig ens5 | grep "inet " | awk '{print $2}'
      - run: echo "EXTERNAL_IP=$(ifconfig ens5 | grep "inet " | awk '{print $2}')" > ./integration_test/.env
      - run: cd integration_test && docker compose -f docker-compose-test.yaml --env-file .env up --remove-orphans test --exit-code-from test
      - codecov/upload



  test_package:
    parameters:
      workdir:
        type: string
      codecov_flag:
        type: string
      mix_test_args:
        type: string
        default: ""

    resource_class: large
    docker:
      - image: membraneframeworklabs/docker_membrane:v2.3.0
        environment:
          MIX_ENV: test

    working_directory: << parameters.workdir >>

    steps:
      - checkout:
          path: ~/app
      - run: mix deps.get
      - run: mix coveralls.json << parameters.mix_test_args >>
      - codecov/upload:
          flags: << parameters.codecov_flag >>

  lint_package:
    parameters:
      workdir:
        type: string
      disable_dev_checks:
        type: boolean
        default: false

    resource_class: large
    docker:
      - image: membraneframeworklabs/docker_membrane:v1.8.2
        environment:
          MIX_ENV: dev

    working_directory: << parameters.workdir >>

    steps:
      - checkout:
          path: ~/app
      - run: mix deps.get
      - run: mix format --check-formatted
      - unless:
          condition: << parameters.disable_dev_checks >>
          steps:
            - run: mix compile --force --warnings-as-errors
            - run: mix credo
            - run: mix dialyzer
            - run: mix docs && mix docs 2>&1 | (! grep -q "warning:")

  check_changelog_update:
    parameters:
      workdir:
        type: string

    machine:
      image: ubuntu-2204:2024.01.1

    working_directory: << parameters.workdir >>

    steps:
      - checkout:
          path: ~/app
      - run: 
          name: Check "CHANGELOG.md" Update
          command: |
            git rebase master && [[ "$(git branch --show-current)" == "master" ]] ||
            git diff-tree --no-commit-id --name-only -r HEAD master . | grep -q "CHANGELOG.md"

  test_webrtc_integration:
    resource_class: large
    docker:
      - image: membraneframeworklabs/docker_membrane:v1.8.2
        environment:
          MIX_ENV: test
          NODE_ENV: development
        user: root

    working_directory: ~/app/engine

    steps:
      - checkout:
          path: ~/app
      # TODO remove this after updating Node in out docker_membrane repository
      - run: npm install npm@9.2.0 -g
      - run: mix test.webrtc.integration


workflows:
  test-engine:
    when:
      or:
        - << pipeline.parameters.repo-root-changed >>
        - << pipeline.parameters.engine-changed >>
    jobs:
      - test_package:
          name: test_engine
          workdir: ~/app/engine
          codecov_flag: engine

  test-webrtc:
    when:
      or:
        - << pipeline.parameters.repo-root-changed >>
        - << pipeline.parameters.engine-changed >>
        - << pipeline.parameters.webrtc-changed >>
    jobs:
      - test_package:
          name: test_webrtc
          workdir: ~/app/webrtc
          codecov_flag: webrtc
      - test_webrtc_integration

  test-hls:
    when:
      or:
        - << pipeline.parameters.repo-root-changed >>
        - << pipeline.parameters.engine-changed >>
        # TODO: remove once the HLS endpoint no longer depends on the WebRTC endpoint
        - << pipeline.parameters.webrtc-changed >>
        - << pipeline.parameters.hls-changed >>
    jobs:
      - test_package:
          name: test_hls
          workdir: ~/app/hls
          codecov_flag: hls
          # TODO: remove once the compositor issues are resolved
          mix_test_args: "--exclude gpu"

  test-rtsp:
    when:
      or:
        - << pipeline.parameters.repo-root-changed >>
        - << pipeline.parameters.engine-changed >>
        # TODO: remove once the RTSP endpoint no longer depends on the WebRTC endpoint
        - << pipeline.parameters.webrtc-changed >>
        - << pipeline.parameters.rtsp-changed >>
    jobs:
      - test_package:
          name: test_rtsp
          workdir: ~/app/rtsp
          codecov_flag: rtsp

  test-file:
    when:
      or:
        - << pipeline.parameters.repo-root-changed >>
        - << pipeline.parameters.engine-changed >>
        # TODO: remove once the File endpoint no longer depends on the WebRTC endpoint
        - << pipeline.parameters.webrtc-changed >>
        - << pipeline.parameters.file-changed >>
    jobs:
      - test_package:
          name: test_file
          workdir: ~/app/file
          codecov_flag: file

  test-sip:
    when:
      or:
        - << pipeline.parameters.repo-root-changed >>
        - << pipeline.parameters.engine-changed >>
        # TODO: remove once the File endpoint no longer depends on the WebRTC endpoint
        - << pipeline.parameters.webrtc-changed >>
        - << pipeline.parameters.sip-changed >>
    jobs:
      - test_package:
          name: test_sip
          workdir: ~/app/sip
          codecov_flag: sip
  
  test-recording:
    when:
      or:
        - << pipeline.parameters.repo-root-changed >>
        - << pipeline.parameters.engine-changed >>
        # TODO: remove once the endpoint no longer depends on the WebRTC endpoint
        - << pipeline.parameters.webrtc-changed >>
        - << pipeline.parameters.recording-changed >>
    jobs:
      - test_package:
          name: test_recording
          workdir: ~/app/recording
          codecov_flag: recording

  test-integration:
    when:
      or:
        - << pipeline.parameters.repo-root-changed >>
        - << pipeline.parameters.engine-changed >>
        - << pipeline.parameters.webrtc-changed >>
        - << pipeline.parameters.hls-changed >>
        - << pipeline.parameters.rtsp-changed >>
        - << pipeline.parameters.file-changed >>
        - << pipeline.parameters.recording-changed >>
        - << pipeline.parameters.integration-changed >>
    jobs:
      - test_integration:
          name: test_integration
          workdir: ~/app/integration_test
          codecov_flag: integration

  lint-engine:
    when: << pipeline.parameters.engine-changed >>
    jobs:
      - lint_package:
          name: lint_engine
          workdir: ~/app/engine
      - check_changelog_update:
          name: check_changelog_update_engine
          workdir: ~/app/engine

  lint-webrtc:
    when: << pipeline.parameters.webrtc-changed >>
    jobs:
      - lint_package:
          name: lint_webrtc
          workdir: ~/app/webrtc
      - check_changelog_update:
          name: check_changelog_update_webrtc
          workdir: ~/app/webrtc

  lint-hls:
    when: << pipeline.parameters.hls-changed >>
    jobs:
      - lint_package:
          name: lint_hls
          workdir: ~/app/hls
      - check_changelog_update:
          name: check_changelog_update_hls
          workdir: ~/app/hls

  lint-rtsp:
    when: << pipeline.parameters.rtsp-changed >>
    jobs:
      - lint_package:
          name: lint_rtsp
          workdir: ~/app/rtsp
      - check_changelog_update:
          name: check_changelog_update_rtsp
          workdir: ~/app/rtsp

  lint-file:
    when: << pipeline.parameters.file-changed >>
    jobs:
      - lint_package:
          name: lint_file
          workdir: ~/app/file
      - check_changelog_update:
          name: check_changelog_update_file
          workdir: ~/app/file
  lint-sip:
    when: << pipeline.parameters.sip-changed >>
    jobs:
      - lint_package:
          name: lint_sip
          workdir: ~/app/sip
      - check_changelog_update:
          name: check_changelog_update_sip
          workdir: ~/app/sip

  lint-recording:
    when: << pipeline.parameters.recording-changed >>
    jobs:
      - lint_package:
          name: lint_recording
          workdir: ~/app/recording
      - check_changelog_update:
          name: check_changelog_update_recording
          workdir: ~/app/recording

  lint-integration:
    when: << pipeline.parameters.integration-changed >>
    jobs:
      - lint_package:
          name: lint_integration
          workdir: ~/app/integration_test
          disable_dev_checks: true
  
  lint-example-webrtc-to-hls:
    when: << pipeline.parameters.webrtc-to-hls-changed >>
    jobs:
      - lint_package:
          name: lint_webrtc_to_hls
          workdir: ~/app/examples/webrtc_to_hls
          disable_dev_checks: true
  
  lint-webrtc-videoroom:
    when: << pipeline.parameters.webrtc-videoroom-changed >>
    jobs:
      - lint_package:
          name: lint_example_webrtc_videoroom
          workdir: ~/app/examples/webrtc_videoroom
          disable_dev_checks: true
